[project]
name = "simstack4"
version = "0.1.0"
description = "Simultaneous stacking code for astrophysical sources, accounting for bias from clustered sources"
authors = [
    {name = "Marco Viero", email = "your.email@example.com"}
]
dependencies = [
    "numpy>=1.21.2",
    "matplotlib>=3.5.1",
    "pandas>=1.4.1",
    "astropy>=5.0.2",
    "lmfit>=1.0.3",
    "scikit-learn>=1.0.2",
    "scipy",
    "tomli>=2.0.0; python_version<'3.11'", # TOML support for older Python
    "pydantic>=2.0.0", # For data validation
    "polars>=0.20.0", # Fast dataframe library (alternative to pandas)
    # "vaex>=4.17.0",   # Commented out - doesn't support Python 3.13 yet
    "psutil>=7.0.0",
    "seaborn>=0.13.2",
    "pyarrow>=20.0.0",
]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Astronomy",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "black",
    "ruff",  # Modern, fast linter (replaces flake8)
    "mypy",
    "pre-commit",
]
notebooks = [
    "jupyter",
    "jupyterlab",
    "ipykernel",
]
# Separate optional dependency for large datasets when Python 3.13 support improves
large-data = [
    "polars>=0.20.0",
    # "vaex>=4.17.0",  # Will add back when Python 3.13 support is available
]

[project.scripts]
simstack4 = "simstack4.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0",
    "pytest-cov",
    "black",
    "ruff",
    "mypy",
    "pre-commit",
    "jupyter",
    "jupyterlab",
    "ipykernel",
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
